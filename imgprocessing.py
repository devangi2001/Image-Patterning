# -*- coding: utf-8 -*-
"""imgProcessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FqEPHkjiiIFzln153mETCKsiJK6OdVaG
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import numpy as np
import matplotlib.pyplot as plt
import cv2

# Read image using cv2.imread function

image = cv2.imread('b.tif')
plt.imshow(image)

image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
height=image.shape[0]
width=image.shape[1]
plt.imshow(image)

gray = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY)
plt.imshow(gray, cmap='gray')

# define thresh hold values it can be varry according to image
low_threshold = 10
high_threshold = 100
edges = cv2.Canny(gray, low_threshold, high_threshold)

plt.imshow(edges, cmap='gray')

rho = 1
# rho stands for Distance resolution of the accumulator in pixels
theta = np.pi/180
# theta is angle resolution of the accumulator in radians
threshold = 3
# Only those lines are returned that get enough threshold
minLineLength = 50
# maxLineGap Maximum allowed gap between points on the same line to link them.
maxLineGap = 10
# Maximum allowed gap between points on the same line to link them.

line_image = np.copy(image) #creating an image copy to draw lines on

# Run Hough on the edge-detected image
lines = cv2.HoughLinesP(edges, rho, theta, threshold, np.array([]),
                        minLineLength, maxLineGap)
# here lines are cordinates of line that are obtained from Hough Transform
print("Total number of detected lines are :",len(lines))
print("Coordinates of first Line :", lines[0])

# Iterate over the output "lines" and draw lines on the rgb image
for line in lines:
    for x1,y1,x2,y2 in line:
        cv2.line(line_image,(x1,y1),(x2,y2),(255,0,0),3)

plt.imshow(line_image)

import math
area=0;
for line in lines:
    for x1,y1,x2,y2 in line:
      area = area + math.sqrt((x1-x2)**2+(y1-y2)**2);


print("area:",area)
ratio=area/(height*width)
print("ratio:", ratio)
print("percentage of affected area:", ratio*100)